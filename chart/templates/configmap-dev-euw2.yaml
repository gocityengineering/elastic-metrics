{{- if eq .Values.env "dev-euw2" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "elastic-metrics.fullname" . }}
  labels:
    {{- include "elastic-metrics.labels" . | nindent 4 }}
data:
  config.yaml: |
    elasticProtocol: http
    elasticService: elasticsearch-master.elastic-system.svc.cluster.local
    elasticPort: 9200
    kibanaUrl: https://kibana.dev-euw2.common.lpge.co
    prometheusUrl: https://prometheus.dev-euw2.common.lpge.co
    # email support
    emailService: email-service.devops-infra.svc.cluster.local
    emailServicePort: 8080
    # lower is better for timely alerts
    # for hourly rate of increase, use PromQL
    queryIntervalMinutes: 5
    # this value should be > 1 * queryInterval and  < 2 * queryInterval
    # a given log entry should appear in no more than two consecutive queries
    # as the deduplication hashmap resets after guarding against repeat entries
    queryFromMinutes: 7
    # don't overwhelm your Slack channel
    # this is the cap on results forwarded for a single query
    maxForwardedResultsPerQuery: 2
    logMatches: false
    queries:
      # platform
      - label: "SystemOOM in dev, sit and ext"
        luceneQuery: 'kubernetes.container.name:/event-exporter/ AND kubernetes.namespace:/^(dev|sit|ext).*/ AND message:(+"SystemOOM")'
        defaultField: "*"
        team: "platform"
      - label: "FailedScheduling (DEV)"
        luceneQuery: 'kubernetes.container.name:/event-exporter/ AND message:(+"FailedScheduling" +"namespace=dev")'
        defaultField: "message"
        team: "platform"
        ignore: true
      - label: "FailedScheduling (UAT)"
        luceneQuery: 'FailedScheduling AND kubernetes.container.name:event-exporter AND "namespace=uat"'
        defaultField: "*"
        team: "platform"
        ignore: true
      - label: "SystemOOM (UAT)"
        luceneQuery: 'kubernetes.container.name:/event-exporter/ AND message:(+"namespace=uat" +"SystemOOM")'
        defaultField: "*"
        team: "platform"
        ignore: true
      - label: "SystemOOM (platform)"
        luceneQuery: 'kubernetes.container.name:/event-exporter/ AND message:("namespace=kube" OR "namespace=devops" OR "namespace=elastic")'
        defaultField: "*"
        team: "platform"
        ignore: true
      - label: "Back-off (UAT)"
        luceneQuery: 'message:(+"Back\-off restarting failed container" +"namespace=uat") AND kubernetes.container.name:/event-exporter/'
        defaultField: "*"
        team: "platform"
        ignore: true
      - label: "Back-off (platform)"
        luceneQuery: 'kubernetes.container.name:/event-exporter/ AND message:(+"Back\-off restarting failed container" AND ("namespace-kube" OR "namespace=devops" OR "namespace=elastic"))'
        defaultField: "*"
        team: "platform"
        ignore: true
      - label: "Calico node not ready"
        luceneQuery: 'kubernetes.container.name:/event-exporter/ AND message:(+"calico-node" +"readiness probe failed" -"bird")'
        defaultField: "*"
        team: "platform"
        ignore: true
      # passManagement
      - label: "Integration Pass Usage - Failed to Make a Scan in Omniscan (DEV)"
        luceneQuery: 'kubernetes.namespace:(+"dev-passport") AND kubernetes.pod.name:/integration-pass-usage-service.*/ AND message:(+"Omniscan Client has failed to process scan for")'
        defaultField: "*"
        team: "passManagement"
      - label: "Integration Pass Usage - Failed to Make a Scan in Omniscan (EXT)"
        luceneQuery: 'kubernetes.namespace:(+"ext-passport") AND kubernetes.pod.name:/integration-pass-usage-service.*/ AND message:(+"Omniscan Client has failed to process scan for")'
        defaultField: "*"
        team: "passManagement"
{{- end }}
